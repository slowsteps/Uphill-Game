package{    import Box2D.Dynamics.Contacts.b2Contact;    import Box2D.Dynamics.b2ContactListener;    import flash.utils.Timer;    import flash.events.TimerEvent;    import flash.utils.getTimer;    import Box2D.Common.Math.b2Vec2;	import Box2D.Common.Math.*;	import flash.display.Shape;     public class CarContactListener extends b2ContactListener    {		public var mainScript:Main;		private var frontwheelAirborne:Boolean = true;		private var rearwheelAirborne:Boolean = true;		private var carAirborne:Boolean = true;		private var airtime:int = 0;		private var airTimer:Timer;		private var frontwheelTimestamp:Number;		private var rearwheelTimestamp:Number;		private var frameticker:int = 0;		private var myshape:Shape;					        public function CarContactListener()        {			airTimer = new Timer(100);			airTimer.addEventListener(TimerEvent.TIMER,onTick);			airTimer.stop();			        }				public function setParentScript(inScript:Main) {			mainScript = inScript;			myshape = new Shape();			mainScript.addChild(myshape);		}  		private function onTick(e:TimerEvent) {			airtime++;			mainScript.airtimelabel.text = "airtime " + airtime;		} 		        override public function BeginContact(contact:b2Contact):void        {						//trace(airtime);						var collidernameA:String = contact.GetFixtureA().GetBody().GetUserData();			var collidernameB:String = contact.GetFixtureB().GetBody().GetUserData();						//				var contactnormal:b2Vec2 = contact.GetFixtureB().GetBody().GetContactList().contact.GetManifold().m_localPlaneNormal;//		//				var fw = mainScript.frontWheel.GetPosition();//				var rw = mainScript.rearWheel.GetPosition();//				var b2f = b2Math.SubtractVV(rw,fw);//				//				var cardot:Number = b2Math.Dot(contactnormal,b2f);				//				myshape.graphics.clear();//				myshape.graphics.lineStyle(1,0xFF0000);//				myshape.graphics.moveTo(400,200);//				myshape.graphics.lineTo(400+ (50*contactnormal.x), 200 + (50*contactnormal.y));//				myshape.graphics.lineStyle(1,0x00FF00);//				myshape.graphics.moveTo(400,200);//				myshape.graphics.lineTo(400 + (20*b2f.x), 200 + (20*b2f.y)); //TIP lineto is abs, not rel.									//TODO detect car upside down						//trace (collidernameA);						if (collidernameB == "frontwheel") {				mainScript.frontwheelclip.alpha = 0.5;			}			else if (collidernameB == "rearwheel"){				mainScript.backwheelclip.alpha = 0.5;			}			else if (collidernameA == "car") {				mainScript.setGameOver("roof landing");				this.airTimer.stop();			}									if (collidernameB == "frontwheel" || collidernameB == "rearwheel") {				airtime = 0;				airTimer.reset();			}		}				override public function EndContact(contact:b2Contact):void        {						if (contact.GetFixtureB().GetBody().GetUserData() == "frontwheel") {				frontwheelAirborne = true;				mainScript.frontwheelclip.alpha = 1;			}			if (contact.GetFixtureB().GetBody().GetUserData() == "rearwheel") {				rearwheelAirborne = true;				mainScript.backwheelclip.alpha = 1;			}						if (frontwheelAirborne && rearwheelAirborne) {				airTimer.start()			}			        }				    }}