package  {		import flash.display.MovieClip;	import flash.events.Event;	import flash.events.MouseEvent;	import flash.events.KeyboardEvent;	import flash.net.SharedObject;	import flash.media.Sound	import flash.media.SoundChannel	import com.google.analytics.AnalyticsTracker;	import com.google.analytics.GATracker			/*GameLoader is in charge of loading and destroying other all game scenes and screens, including	Main (the game), the Shop and the Gameover screen	*/		public class GameLoader extends MovieClip {				public var mymain:Main;		public var myGamestate:Gamestate		public var myintro:Intro;		public var gameoverScreen:GameoverScreen		public var endingScreen:Ending		public var shop:Shop		public var tracker:AnalyticsTracker				private var dialogueLines:Array		private var curDialogueLine:int = 0		private var logoParticleEmitter:Emitter		private var menusong:Sound		private var menusongchannel:SoundChannel										public function GameLoader() {			trace(this,this.name)			myGamestate = new Gamestate()			createIntro();			createScreens()			createDialogue()			frame2dummy.visible = false			tracker = new GATracker(this, "UA-1140834-1", "AS3", false);			tracker.trackEvent("motorabbit","gamestate","mainmenu")		}				private function onStart(e:Event) {						if (myintro) {				this.logoParticleEmitter.Stop()				removeChild(myintro);			}			stage.removeEventListener(KeyboardEvent.KEY_DOWN,onStart)			menusongchannel.stop()			reset();				}		public function createIntro() {						myintro = new Intro();			trace("Intro:",myintro)			addChild(myintro);			myintro.startbutton.addEventListener(MouseEvent.CLICK,onStart);			trace("startbutton:",myintro.startbutton)			//stage.addEventListener(KeyboardEvent.KEY_DOWN,onStart)			myintro.startbutton.visible = false			myintro.dialoguebutton.addEventListener(MouseEvent.CLICK,getNextDialogueText)						menusong = new Menusong()			menusongchannel = menusong.play()					}								//start a new game, first play or after game over		public function reset() {			if (mymain!=null) {				this.removeChild(mymain);			}			mymain= new Main(this);						addChild(mymain);			this.setChildIndex(mymain,0)			var cookie = SharedObject.getLocal("GameState")			if (cookie.data.attempts) cookie.data.attempts++			else cookie.data.attempts = 1		}		private function createScreens() {			var globalmask = new MaskClip()			this.mask = globalmask			shop = new Shop(this) 			addChild(shop)			shop.visible = false												gameoverScreen = new GameoverScreen(this)			addChild(gameoverScreen)			gameoverScreen.x = (800 - gameoverScreen.width)/2			gameoverScreen.y = (450 - gameoverScreen.height)/2			gameoverScreen.visible = false						endingScreen = new Ending(this)			addChild(endingScreen)			endingScreen.visible = false						logoParticleEmitter = new Emitter();			logoParticleEmitter.setup(myintro,myintro.logo,0,0,"ParticleStar");			//logoParticleEmitter.setup(myintro,myintro.logo,0,0,"ParticleTest");			logoParticleEmitter.setGravity(0.02)			logoParticleEmitter.setBlendmode("add")			logoParticleEmitter.setVelocity(0,-0.4,3);			logoParticleEmitter.setalphaDecaySpeed(0.1)			logoParticleEmitter.setEmitterShape(Emitter.AREA)		}				public function resetFromEnding() {						var cookie:SharedObject = SharedObject.getLocal("GameState")			cookie.clear()					if (this.shop) {								removeChild(shop)				shop = new Shop(this)				addChild(shop)								shop.visible = false			}						if (this.myintro) {				createIntro()			}		}		private function createDialogue() {						dialogueLines = new Array()			curDialogueLine = 0						dialogueLines.push({speaker:"dino",text:"Rabbit."})			dialogueLines.push({speaker:"rabbit",text:"Hey man."})			dialogueLines.push({speaker:"dino",text:"I shall be crossing the portal today"})			dialogueLines.push({speaker:"rabbit",text:"That's awesome."})			dialogueLines.push({speaker:"dino",text:"Too bad you will never see what's behind"})			dialogueLines.push({speaker:"dino",text:"you are too slow!..."})			dialogueLines.push({speaker:"dino",text:"HAHAHAHA!",animation:"laugh"})			dialogueLines.push({speaker:"dino",text:"HAHAHAHA \n \n HAHAHA!!",animation:"laugh"})			myintro.dinoBalloon.visible = false			myintro.rabbitBalloon.visible = false			myintro.menudino.stop()  //stop laughing		}		private function getNextDialogueText(e:Event) {			myintro.dinoBalloon.visible = false			myintro.rabbitBalloon.visible = false			myintro.menudino.stop()						var curlineObj:Object = dialogueLines[curDialogueLine]			if (curlineObj.speaker == "dino") {				myintro.dinoBalloon.textfield.text = curlineObj.text					myintro.dinoBalloon.visible = true				if (curlineObj.animation == "laugh") myintro.menudino.laugh()				else myintro.menudino.stop()			}			if (curlineObj.speaker == "rabbit") {				myintro.rabbitBalloon.textfield.text = curlineObj.text				myintro.rabbitBalloon.visible = true				myintro.menudino.stop()			}			if (curDialogueLine < dialogueLines.length - 1)  {				curDialogueLine++			}			else {				myintro.dialoguebutton.visible = false				myintro.startbutton.visible = true			}					}		public function showEnding() {			endingScreen.showResult()		}		public function fadeOutWorld() {			//this.mymain.zoomcontainer.alpha		}	}		}