package  {		import flash.display.MovieClip	import flash.text.TextField	import flash.events.Event	import flash.events.MouseEvent	import flash.events.ProgressEvent;	import com.greensock.TweenLite;	import com.greensock.easing.*;	public class Preloader extends MovieClip {		private var textfield:TextField		private var box:MovieClip		private var carrots:Array				    				public function Preloader() {			trace(this,this.name)			stop()								loaderInfo.addEventListener(ProgressEvent.PROGRESS,onProgress)			loaderInfo.addEventListener(Event.COMPLETE,onComplete)						createPreloaderVisuals()								}						private function createPreloaderVisuals() {			carrot0.visible = false			carrot1.visible = false			carrot2.visible = false			carrot3.visible = false			carrot4.visible = false			carrots = new Array()			carrots.push({clip:carrot0,done:false})			carrots.push({clip:carrot1,done:false})			carrots.push({clip:carrot2,done:false})			carrots.push({clip:carrot3,done:false})			carrots.push({clip:carrot4,done:false})			nextbutton.visible = false		}				private function onProgress(e:ProgressEvent) {			var frac = e.bytesLoaded/e.bytesTotal			wheel.rotation = wheel.rotation + 5			var needle = Math.floor(carrots.length*frac)						for(var i=0; i<carrots.length; i++) {				if (i<needle && !carrots[i].done) {					carrots[i].clip.visible = true					carrots[i].done = true					var mydelay = i*0.1					TweenLite.from(carrots[i].clip, 1, {y:-100,ease:Bounce.easeOut,delay:mydelay});				}			}								}		private function onComplete(e:Event) {			loaderInfo.removeEventListener(ProgressEvent.PROGRESS, onProgress);      		loaderInfo.removeEventListener(Event.COMPLETE, onComplete);						TweenLite.to(wheel, 0.5, {alpha:0});			TweenLite.from(nextbutton,0.3,{y:450,delay:1})						nextbutton.visible = true			nextbutton.addEventListener(MouseEvent.CLICK,onNext)		}		private function onNext(e:Event) {						nextbutton.removeEventListener(MouseEvent.CLICK,onNext)			gotoAndStop(2)					}	}	}