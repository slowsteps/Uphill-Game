package  {		import flash.display.MovieClip	import flash.utils.Timer	import flash.events.TimerEvent	import flash.geom.Point	import com.greensock.TweenMax;	import com.greensock.*;	import com.greensock.easing.*;			import flash.events.Event;	public class TextBalloon extends MovieClip {		private var hideTimer:Timer		private var spawn:MovieClip		private var myMain:Main		private var myPoint:Point		private var savedScaleX:Number		private var savedScaleY:Number		private var offsetX:Number		private var arrowDirection:String="down"				public function TextBalloon(inMain:Main=null,inSpawn:MovieClip=null,inOffsetX:Number=0,inArrow:String="down") {						myMain = inMain			spawn = inSpawn			offsetX = inOffsetX			arrowDirection = inArrow			showArrow(inArrow)			if (myMain) myMain.addChild(this)			myPoint = new Point()			visible = false			hideTimer = new Timer(1500,0)			hideTimer.addEventListener(TimerEvent.TIMER,hide)			savedScaleX = scaleX			savedScaleY = scaleY		}		public function show(inText:String) {			scaleX = savedScaleX			scaleY = savedScaleY			alpha = 1			visible = true						textfield.text = inText			hideTimer.start()			this.addEventListener(Event.ENTER_FRAME,onEnterFrame)			TweenMax.from(this, 0.5, {scaleX:0,scaleY:0,ease:Elastic.easeOut});		}				private function showArrow(inArrow:String) {			arrowleft.visible = false			arrowright.visible = false			arrowdown.visible = false						if (inArrow == "left") arrowleft.visible = true						if (inArrow == "down") arrowdown.visible = true			if (inArrow == "right") arrowright.visible = true		}				private function onEnterFrame(e:Event) {						myPoint.x = spawn.x + offsetX;			myPoint.y = spawn.y - spawn.height/2 - height/2;			myPoint = spawn.parent.localToGlobal(myPoint);						if (myPoint.x<(800-width/2)) x = myPoint.x			else x=800 - width/2			if (myPoint.x< 0) {				x = 0 + width/2				showArrow("left")			}			else if(this.arrowDirection == "right") showArrow("right")									if (myPoint.y>(0+height)) y = myPoint.y			else y = height					}						public function hide(e:Event) {			TweenMax.to(this, 0.5, {alpha:0,onComplete:onHideCompleted});						this.removeEventListener(Event.ENTER_FRAME,onEnterFrame)			hideTimer.reset();		}		private function onHideCompleted() {			visible = false		}	}	}